{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Wrapper","styled","div","Status","Square","value","handleClick","x","y","className","onClick","squareKey","Row","rowI","map","square","index","Board","status","useState","squares","Array","fill","xIsNext","board","setBoard","nextPlayer","winner","i","j","console","log","calculateWinner","row","currentY","currentX","Game","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7fecddc3.chunk.js","sourcesContent":["import './App.css';\nimport { useState } from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  background-color: #d3e397;\n  margin: 100px 200px;\n  display: flex;\n\n  height: 720px;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Status = styled.div`\n  margin: 10px;\n  font-weight: bold;\n  font-size: 24px;\n  text-align: center;\n`;\n\nfunction Square({ value, handleClick, x, y }) {\n  return (\n    <button className=\"square\" onClick={() => handleClick(x, y)}>\n      {value}\n    </button>\n  );\n}\n\nlet squareKey = 0;\nfunction Row({ rowI, handleClick, y }) {\n  return (\n    <div className=\"board-row\">\n      {rowI.map((square, index) => {\n        squareKey++;\n        return <Square value={rowI[index]} x={index} y={y} handleClick={handleClick} key={'S' + squareKey} />;\n      })}\n    </div>\n  );\n}\n\nfunction Board() {\n  const [board, setBoard] = useState({ squares: Array(19).fill(Array(19).fill(null)), xIsNext: true });\n  let nextPlayer = board.xIsNext ? '○' : '●';\n  let status;\n  const winner = calculateWinner(board.squares);\n  if (winner) {\n    status = `winner: ${winner}`;\n  } else {\n    status = `Next Player: ${board.xIsNext ? '○' : '●'}`;\n  }\n  const handleClick = (x, y) => {\n    if (board.squares[y][x]) return;\n    setBoard({\n      squares: board.squares.map((row, currentY) => {\n        if (currentY !== y) return row;\n        return row.map((square, currentX) => {\n          if (currentX !== x) return square;\n          return nextPlayer;\n        });\n      }),\n      xIsNext: !board.xIsNext,\n    });\n  };\n  return (\n    <div>\n      <Status>{status}</Status>\n      {board.squares.map((row, index) => {\n        return <Row key={'R' + index} y={index} rowI={board.squares[index]} handleClick={handleClick} />;\n      })}\n    </div>\n  );\n}\n\nfunction Game() {\n  return (\n    <Wrapper>\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board />\n        </div>\n      </div>\n    </Wrapper>\n  );\n}\n\n// function calculateWinner(squares) {\n//   const lines = [\n//     [0, 1, 2],\n//     [3, 4, 5],\n//     [6, 7, 8],\n//     [0, 3, 6],\n//     [1, 4, 7],\n//     [2, 5, 8],\n//     [0, 4, 8],\n//     [2, 4, 6],\n//   ];\n//   for (let i = 0; i < lines.length; i++) {\n//     const [a, b, c] = lines[i];\n//     if (squares[a] && squares[a] === squares[b] && squares[b] === squares[c]) {\n//       return squares[a];\n//     }\n//   }\n//   return null;\n// }\n\nfunction calculateWinner(board) {\n  // 檢查橫排\n  for (let i = 0; i < 19; i++) {\n    for (let j = 0; j <= 13; j++) {\n      if (board[i][j]) {\n        if (\n          board[i][j] === board[i][j + 1] &&\n          board[i][j + 1] === board[i][j + 2] &&\n          board[i][j + 2] === board[i][j + 3] &&\n          board[i][j + 3] === board[i][j + 4]\n        ) {\n          console.log(board[i][j], '橫排贏');\n          return board[i][j];\n        }\n      }\n    }\n  }\n\n  // 檢查直排\n  for (let i = 0; i <= 13; i++) {\n    for (let j = 0; j < 19; j++) {\n      if (board[i][j]) {\n        if (\n          board[i][j] === board[i + 1][j] &&\n          board[i + 1][j] === board[i + 2][j] &&\n          board[i + 2][j] === board[i + 3][j] &&\n          board[i + 3][j] === board[i + 4][j]\n        ) {\n          console.log(board[i][j], '直排贏');\n          return board[i][j];\n        }\n      }\n    }\n  }\n\n  // 檢查左上連右下\n  for (let i = 0; i <= 14; i++) {\n    for (let j = 0; j <= 14; j++) {\n      if (board[i][j]) {\n        if (\n          board[i][j] === board[i + 1][j + 1] &&\n          board[i + 1][j + 1] === board[i + 2][j + 2] &&\n          board[i + 2][j + 2] === board[i + 3][j + 3] &&\n          board[i + 3][j + 3] === board[i + 4][j + 4]\n        ) {\n          console.log(board[i][j], '左上連右下贏');\n          return board[i][j];\n        }\n      }\n    }\n  }\n\n  // 檢查右上連左下\n  for (let i = 4; i < 19; i++) {\n    for (let j = 0; j <= 14; j++) {\n      if (board[i][j]) {\n        if (\n          board[i][j] === board[i - 1][j + 1] &&\n          board[i - 1][j + 1] === board[i - 2][j + 2] &&\n          board[i - 2][j + 2] === board[i - 3][j + 3] &&\n          board[i - 3][j + 3] === board[i - 4][j + 4]\n        ) {\n          console.log(board[i][j], '右上連左下贏');\n          return board[i][j];\n        }\n      }\n    }\n  }\n  return null;\n}\nexport default Game;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Game from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<Game />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}